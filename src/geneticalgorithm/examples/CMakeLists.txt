CMAKE_MINIMUM_REQUIRED(VERSION 3.16)

PROJECT(Examples VERSION 0.0.1 DESCRIPTION "A generic genetic algorithm implementation")

SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_FLAGS -g)

IF (DEFINED CMAKE_ROOT_OUTPUT_DIRECTORY)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_ROOT_OUTPUT_DIRECTORY}/build/lib)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_ROOT_OUTPUT_DIRECTORY}/build/lib)
    SET(CMAKE_INCLUDE_OUTPUT_DIRECTORY ${CMAKE_ROOT_OUTPUT_DIRECTORY}/build/include)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_ROOT_OUTPUT_DIRECTORY}/build/examples)
ELSE ()
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../../../build/lib)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../../../build/lib)
    SET(CMAKE_INCLUDE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../../../build/include)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../../../build/examples)
ENDIF ()

ADD_EXECUTABLE(example01 example01.cpp)
ADD_EXECUTABLE(example02 example02.cpp)

SET(HEADER_FILES ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/Chromosome.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/Population.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/RandomNumberGenerator.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/Configuration.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/AbstractCrossoverConfiguration.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/SinglePointCrossoverConfiguration.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/AbstractSinglePointCrossoverConfigurationMode.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/FixedMode.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/RandomMode.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/UniformCrossoverConfiguration.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/MutationConfiguration.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/AbstractSelectionConfiguration.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/ProportionateSelectionConfiguration.h ${CMAKE_INCLUDE_OUTPUT_DIRECTORY}/TournamentSelectionConfiguration.h)

SET(SOURCES example01.cpp example02.cpp)

#target_link_libraries(GeneticAlgorithm LINK_PUBLIC GeneticAlgorithmLib)

TARGET_LINK_LIBRARIES(example01 ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libGeneticAlgorithmLib.a)
TARGET_LINK_LIBRARIES(example02 ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libGeneticAlgorithmLib.a)

INCLUDE_DIRECTORIES(${CMAKE_INCLUDE_OUTPUT_DIRECTORY})

#target_include_directories(Examples PRIVATE ${CMAKE_INCLUDE_OUTPUT_DIRECTORY})
#include(${HEADER_FILES})

ADD_CUSTOM_TARGET(executable DEPENDS GeneticAlgorithm)